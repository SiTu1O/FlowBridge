

contract <%= nodeName(processId()) %>_WorkList {
<% nodeList.forEach( nodeId => {
    var node = nodeMap.get(nodeId); -%>
    struct <%= nodeName(nodeId) %>_Request {
        function (uint<%= getParameterType(nodeId, true) %>) external returns (bool) callback;    
    }
    <%= nodeName(nodeId) %>_Request [] <%= nodeName(nodeId) %>_requests;

    function <%= nodeName(nodeId) %>_start (function (uint<%= getParameterType(nodeId, true) %>) external returns (bool) callback) public returns (uint) {
        uint index = <%= nodeName(nodeId) %>_requests.length;
        <%= nodeName(nodeId) %>_requests.push(<%= nodeName(nodeId) %>_Request(callback));
        return index;
    }
    
    function <%= nodeName(nodeId) %>_callback (uint reqId<%= getParameters(nodeId, true) %>) public{
        <%= nodeName(nodeId) %>_requests[reqId].callback(reqId<%= getParameters(nodeId, false) %>);
    }
<%  }) -%>

    function getAddress() public view returns (address) {
        return address(this);
    }
}
